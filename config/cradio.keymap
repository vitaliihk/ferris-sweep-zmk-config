// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 2500  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define MAC 0
#define WIN 1
#define RIG 2
#define LEF 3
#define TRI 4
#define MOUSE 5

/ {
    chosen { zmk,charmap = &charmap_us; };

    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };

        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <300>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <0>;      // 0
            time-to-max-speed-ms = <40>;      // 500
            delay-ms = <0>;                   // 10
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <2 1>;
            then-layer = <3>;
        };
    };

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q               &kp W  &kp E  &kp R  &kp T        &kp Y               &kp U  &kp I      &kp O    &kp P
&ht LEFT_SHIFT A    &kp S  &kp D  &kp F  &kp G        &kp H               &kp J  &kp K      &kp L    &ht RIGHT_SHIFT BACKSPACE
&ht LEFT_CONTROL Z  &kp X  &kp C  &kp V  &kp B        &kp N               &kp M  &kp COMMA  &kp DOT  &ht RIGHT_CONTROL SLASH
                                  &mo 1  &kp SPACE    &ht LEFT_ALT ENTER  &mo 2
            >;
        };

        left_layer {
            bindings = <
&kp EXCL  &kp AT            &kp HASH           &kp DLLR        &kp PRCNT                &kp CARET  &kp AMPS   &kp ASTRK  &kp GRAVE  &kp TILDE
&kp TAB   &kp LBKT          &kp RIGHT_BRACKET  &kp LPAR        &kp RIGHT_PARENTHESIS    &kp FSLH   &kp MINUS  &kp EQUAL  &kp COLON  &kp SEMI
&trans    &kp SINGLE_QUOTE  &kp DOUBLE_QUOTES  &kp LEFT_BRACE  &kp RIGHT_BRACE          &kp BSLH   &kp UNDER  &kp PLUS   &kp PIPE   &kp QMARK
                                               &trans          &trans                   &trans     &trans
            >;
        };

        right_layer {
            bindings = <
&kp N1            &kp N2          &kp N3  &kp N4  &kp N5     &kp N6  &kp N7          &kp N8          &kp N9           &kp N0
&trans            &trans          &trans  &trans  &trans     &trans  &kp HOME        &kp UP          &kp END          &kp SEMICOLON
&kp LEFT_CONTROL  &kp LEFT_SHIFT  &trans  &trans  &trans     &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans
                                          &trans  &kp ESC    &trans  &trans
            >;
        };

        tri_layer {
            bindings = <
&kp F1  &kp F2   &kp F3   &kp F4   &trans    &bt BT_CLR_ALL  &out OUT_TOG  &trans  &kp C_MUTE    &kp C_PREV
&kp F5  &kp F6   &kp F7   &kp F8   &trans    &trans          &none         &trans  &kp C_VOL_UP  &kp C_PP
&kp F9  &kp F10  &kp F11  &kp F12  &trans    &trans          &none         &trans  &kp C_VOL_DN  &kp C_NEXT
                          &trans   &trans    &trans          &trans
            >;
        };
    };
};
